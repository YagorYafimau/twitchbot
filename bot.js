const { Telegraf, Markup } = require('telegraf');
const fs = require('fs');  // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π

const bot = new Telegraf('7695014969:AAGql5j-NLxvRU_G50idM6Fm92GCTn-oB8s'); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
const ADMIN_CHAT_ID = '@twitchvzaimadmin'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id

// –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const users = new Map();
const channels = []; // –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å —Å—Å—ã–ª–∫–æ–π, ownerId –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

// –¢–∞–π–º–µ—Ä –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (5 –º–∏–Ω—É—Ç)
const USER_STATE_TIMEOUT = 300000; // 5 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
function loadStats() {
    try {
        const data = fs.readFileSync('stats.json');
        return JSON.parse(data);
    } catch (error) {
        // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        return { "users": 0, "messages": 0 };
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ñ–∞–π–ª
function saveStats(stats) {
    fs.writeFileSync('stats.json', JSON.stringify(stats, null, 2));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
let stats = loadStats();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
function getAvailableChannels(userId) {
    const user = users.get(userId);
    if (!user) return [];

    return channels.filter(
        (channel) => channel.ownerId !== userId && !user.subscribed.includes(channel.link)
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function resetUserState(userId) {
    const user = users.get(userId);
    if (user) {
        user.step = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        console.log(`–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —Å–±—Ä–æ—à–µ–Ω–æ.`);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
    const userId = ctx.from.id;

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    stats.users++;
    saveStats(stats);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏—Å–ª–∞–ª —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
    if (!users.has(userId)) {
        ctx.reply(
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Twitch –∫–∞–Ω–∞–ª üì∫\n\n' +
            'üåü –í–∞–∂–Ω–æ: –Ω–∞ —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤—ã –ø–æ–¥–ø–∏—à–µ—Ç–µ—Å—å, —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤–∞—à –∫–∞–Ω–∞–ª –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º! üåü',
            Markup.removeKeyboard()
        );
    } else {
        ctx.reply('–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è" –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ Twitch
function isTwitchLink(url) {
    return url.includes('twitch.tv');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
bot.on('text', (ctx) => {
    const userId = ctx.from.id;
    const message = ctx.message.text;

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    stats.messages++;
    saveStats(stats);

    if (!users.has(userId)) {
        if (isTwitchLink(message)) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Twitch –∫–∞–Ω–∞–ª
            users.set(userId, { 
                twitch: message, 
                subscribed: [], 
                step: 0, 
                subscribersCount: 0, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
                viewsCount: 0 // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑–æ–≤ –∫–∞–Ω–∞–ª–∞
            });
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫
            channels.push({ 
                link: message, 
                ownerId: userId, 
                subscribersCount: 0 // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞
            });

            ctx.reply(
                '–°—Å—ã–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –º–æ–π Twitch –∫–∞–Ω–∞–ª üíñ',
                Markup.inlineKeyboard([ 
<<<<<<< HEAD
                    Markup.button.url('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üíú', 'https://www.twitch.tv/komainn'), // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —É–±—Ä–∞–Ω–∞ –ª–∏—à–Ω—è—è "h"
=======
                    Markup.button.url('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üíú', 'https://www.twitch.tv/komainn'),
>>>>>>> 0f7e4515aadaf3f9936137e8c45a6b562836c814
                    Markup.button.callback('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ', 'check_subscription')
                ])
            );
        } else {
            ctx.reply('‚ö†Ô∏è –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Twitch –∫–∞–Ω–∞–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä: https://www.twitch.tv/yourchannel');
        }
    } else {
        const user = users.get(userId);
        if (user.step === 0 && !isTwitchLink(message)) {
            ctx.reply('‚ö†Ô∏è –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Twitch –∫–∞–Ω–∞–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä: https://www.twitch.tv/yourchannel');
        } else if (user.step === 0 && isTwitchLink(message)) {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Twitch –∫–∞–Ω–∞–ª
            user.twitch = message;
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–∫–µ
            const channelIndex = channels.findIndex(channel => channel.ownerId === userId);
            if (channelIndex !== -1) {
                channels[channelIndex].link = message;
            }

            ctx.reply(
                '–°—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞! –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –º–æ–π Twitch –∫–∞–Ω–∞–ª üíñ',
                Markup.inlineKeyboard([ 
                    Markup.button.url('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üíú', 'https://www.twitch.tv/innkomaf16'),
                    Markup.button.callback('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ', 'check_subscription')
                ])
            );
        } else {
            ctx.reply('–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–≤–æ—é —Å—Å—ã–ª–∫—É. –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è"!'); 
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
bot.action('check_subscription', (ctx) => {
    const userId = ctx.from.id;
    const user = users.get(userId);

    if (user.step === 0) {
        ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ üì∏');
        user.step = 1; // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∂–∏–¥–∞–Ω–∏—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setTimeout(() => resetUserState(userId), USER_STATE_TIMEOUT);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ (—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤)
bot.on('photo', (ctx) => {
    const userId = ctx.from.id;
    const user = users.get(userId);

    if (user && user.step === 1) {
        const photo = ctx.message.photo[0].file_id;

        // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        const targetChannelLink = user.currentChannel;

        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
        ctx.telegram.sendPhoto(ADMIN_CHAT_ID, photo, {
            caption: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${ctx.from.username} (ID: ${userId}) –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ Twitch –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.twitch}\n–°—Å—ã–ª–∫–∞ –Ω–∞ Twitch –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏: ${targetChannelLink}`,
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ', callback_data: `approve_${userId}` },
                        { text: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå', callback_data: `reject_${userId}` }
                    ]
                ]
            }
        });

        ctx.reply('–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! ‚è≥');
        user.step = 2; // –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
bot.action(/approve_(\d+)/, (ctx) => {
    const userId = ctx.match[1];
    const user = users.get(Number(userId));

    if (user) {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (user.currentChannel) {
            user.subscribed.push(user.currentChannel);
            user.currentChannel = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è –∫–∞–Ω–∞–ª–∞
            const channel = channels.find(ch => ch.link === user.currentChannel);
            if (channel) {
                channel.subscribersCount++;
            }

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.viewsCount += user.subscribed.length;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            const availableChannels = getAvailableChannels(userId);
            availableChannels.slice(0, user.subscribed.length).forEach(ch => {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                ctx.telegram.sendMessage(ch.ownerId, `–í–∞—à –∫–∞–Ω–∞–ª –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @${ctx.from.username}`);
            });
        }

        ctx.telegram.sendMessage(
            userId,
            `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! üôå\n–í–∞—à –∫–∞–Ω–∞–ª –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω ${user.subscribed.length} —Ä–∞–∑(–∞).`,
            Markup.inlineKeyboard([
                Markup.button.callback('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –µ—â–µ üëâ', 'subscribe_more'),
                Markup.button.callback('–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å üö´', 'stop')
            ])
        );
        ctx.reply('–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.');
    }
});

bot.action(/reject_(\d+)/, (ctx) => {
    const userId = ctx.match[1];
    const user = users.get(Number(userId));

    if (user) {
        ctx.telegram.sendMessage(userId, '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –ø–æ–¥–ø–∏—Å–∫–æ–π üì∏');
        user.step = 1; // –í–æ–∑–≤—Ä–∞—Ç –∫ –æ–∂–∏–¥–∞–Ω–∏—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        ctx.reply('–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.');
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –µ—â–µ"
bot.action('subscribe_more', (ctx) => {
    const userId = ctx.from.id;
    const user = users.get(userId);

    if (!user) {
        ctx.reply('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Twitch –∫–∞–Ω–∞–ª üì∫');
        return;
    }

    const availableChannels = getAvailableChannels(userId);

    if (availableChannels.length === 0) {
        ctx.reply(
            '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ‚è≥',
            Markup.inlineKeyboard([ 
                Markup.button.callback('–•–æ—Ä–æ—à–æ üôÇ', 'ready_to_subscribe')
            ])
        );
    } else {
        const channel = availableChannels[0];
        user.currentChannel = channel.link; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        ctx.reply(
            `–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: ${channel.link} üëâ`,
            Markup.inlineKeyboard([ 
                Markup.button.callback(`–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ`, `check_subscription_new_${channel.link}`)
            ])
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–•–æ—Ä–æ—à–æ üôÇ"
bot.action('ready_to_subscribe', (ctx) => {
    const userId = ctx.from.id;
    const user = users.get(userId);

    if (!user) {
        ctx.reply('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Twitch –∫–∞–Ω–∞–ª üì∫');
        return;
    }

    const availableChannels = getAvailableChannels(userId);

    if (availableChannels.length === 0) {
        ctx.reply(
            '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ‚è≥',
            Markup.inlineKeyboard([ 
                Markup.button.callback('–•–æ—Ä–æ—à–æ üôÇ', 'ready_to_subscribe')
            ])
        );
    } else {
        ctx.reply(
            '–ì–æ—Ç–æ–≤—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è? Let\'s go! üöÄ',
            Markup.inlineKeyboard([
                Markup.button.callback('–ù–∞—á–∞—Ç—å –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è', 'subscribe_more')
            ])
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
bot.action(/check_subscription_new_.+/, (ctx) => {
    const userId = ctx.from.id;
    const user = users.get(userId);

    if (user) {
        ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ üì∏');
        user.step = 1; // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∂–∏–¥–∞–Ω–∏—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setTimeout(() => resetUserState(userId), USER_STATE_TIMEOUT);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å"
bot.action('stop', (ctx) => {
    ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞! –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ. üöÄ');
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().then(() => {
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
});

process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
